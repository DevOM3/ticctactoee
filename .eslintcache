[{"E:\\ReactProjects\\tic-tac-toe\\src\\index.tsx":"1","E:\\ReactProjects\\tic-tac-toe\\src\\reportWebVitals.ts":"2","E:\\ReactProjects\\tic-tac-toe\\src\\App.tsx":"3","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Home.tsx":"4","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Join.tsx":"5","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Game.tsx":"6","E:\\ReactProjects\\tic-tac-toe\\src\\context\\StateProvider.js":"7","E:\\ReactProjects\\tic-tac-toe\\src\\context\\reducer.ts":"8","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Create.tsx":"9","E:\\ReactProjects\\tic-tac-toe\\src\\common\\commonVariants.tsx":"10","E:\\ReactProjects\\tic-tac-toe\\src\\common\\firebase.ts":"11","E:\\ReactProjects\\tic-tac-toe\\src\\components\\PlayerInfo.tsx":"12","E:\\ReactProjects\\tic-tac-toe\\src\\components\\Modal.tsx":"13","E:\\ReactProjects\\tic-tac-toe\\src\\common\\GameVariants.tsx":"14","E:\\ReactProjects\\tic-tac-toe\\src\\components\\Loader.tsx":"15","E:\\ReactProjects\\tic-tac-toe\\src\\components\\ExitLoader.tsx":"16","E:\\ReactProjects\\tic-tac-toe\\src\\common\\Speaker.tsx":"17","E:\\ReactProjects\\tic-tac-toe\\src\\common\\speaker.tsx":"18"},{"size":798,"mtime":1609056531350,"results":"19","hashOfConfig":"20"},{"size":425,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":907,"mtime":1609253848748,"results":"22","hashOfConfig":"20"},{"size":6593,"mtime":1609410922098,"results":"23","hashOfConfig":"20"},{"size":10389,"mtime":1609412138448,"results":"24","hashOfConfig":"20"},{"size":13461,"mtime":1609414638663,"results":"25","hashOfConfig":"20"},{"size":368,"mtime":1609005094429,"results":"26","hashOfConfig":"20"},{"size":545,"mtime":1609246663513,"results":"27","hashOfConfig":"20"},{"size":9774,"mtime":1609411430596,"results":"28","hashOfConfig":"20"},{"size":1302,"mtime":1609318780089,"results":"29","hashOfConfig":"20"},{"size":484,"mtime":1609059086024,"results":"30","hashOfConfig":"20"},{"size":2415,"mtime":1609332952654,"results":"31","hashOfConfig":"20"},{"size":4056,"mtime":1609414817622,"results":"32","hashOfConfig":"20"},{"size":1042,"mtime":1609321268009,"results":"33","hashOfConfig":"20"},{"size":2583,"mtime":1609413177371,"results":"34","hashOfConfig":"20"},{"size":1193,"mtime":1609319829645,"results":"35","hashOfConfig":"20"},{"size":223,"mtime":1609410852860,"results":"36","hashOfConfig":"20"},{"size":223,"mtime":1609410852860,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"b40iom",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"E:\\ReactProjects\\tic-tac-toe\\src\\index.tsx",[],["83","84"],"E:\\ReactProjects\\tic-tac-toe\\src\\reportWebVitals.ts",[],"E:\\ReactProjects\\tic-tac-toe\\src\\App.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Home.tsx",["85"],"import { Button, ButtonGroup, FormControl, TextField } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport { actionTypes } from \"../context/reducer\";\r\nimport {\r\n  containerDivVariants,\r\n  containerVariants,\r\n} from \"../common/commonVariants\";\r\nimport { v4 } from \"uuid\";\r\nimport VanillaTilt from \"vanilla-tilt\";\r\nimport { speak } from \"../common/speaker\";\r\n\r\nconst titleVariants = {\r\n  initial: { y: \"-100vh\" },\r\n  animate: { y: 0, transition: { delay: 0.2, type: \"spring\", stiffness: 120 } },\r\n};\r\nconst divVariants = {\r\n  initial: { y: \"100vh\" },\r\n  animate: { y: 0, transition: { delay: 0.2, type: \"spring\", stiffness: 51 } },\r\n  hover: {\r\n    scale: 1.1,\r\n    transition: {\r\n      duration: 0.3,\r\n      yoyo: Infinity,\r\n    },\r\n  },\r\n};\r\n\r\nconst Home = () => {\r\n  const [{ nickname }, dispatch] = useStateValue();\r\n  const [nickName, setNickName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const homeContainer: HTMLElement = document.querySelector(\r\n      \"#home__contanier\"\r\n    ) as HTMLElement;\r\n    if (homeContainer) {\r\n      VanillaTilt.init(homeContainer, {\r\n        max: 21,\r\n        speed: 444,\r\n        glare: true,\r\n        \"max-glare\": 1,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const userIDFromLocalStorage = localStorage.getItem(\"userID\");\r\n    if (userIDFromLocalStorage) {\r\n      dispatch({\r\n        type: actionTypes.SET_USER_ID,\r\n        userID: userIDFromLocalStorage,\r\n      });\r\n    } else {\r\n      const generatedUserID = v4();\r\n      localStorage.setItem(\"userID\", generatedUserID);\r\n      dispatch({\r\n        type: actionTypes.SET_USER_ID,\r\n        userID: generatedUserID,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const title: HTMLHeadingElement = document.getElementById(\r\n      \"home__title\"\r\n    ) as HTMLHeadingElement;\r\n    const titleText: string = title.innerText;\r\n\r\n    const titleTextArrayOfLetters: string[] = titleText.split(\"\");\r\n    title.innerText = \"\";\r\n\r\n    titleTextArrayOfLetters.forEach((titleWord) => {\r\n      title.innerHTML += `<span>${titleWord}</span>`;\r\n      titleWord === \"C\" && (title.innerHTML += \"&nbsp;\");\r\n    });\r\n\r\n    let word: number = 0;\r\n    const interval = setInterval(() => {\r\n      const span: HTMLSpanElement = document.querySelectorAll(\"span\")[word];\r\n      span.classList.add(\"home__titleSpan\");\r\n      setTimeout(() => {\r\n        span.classList.remove(\"home__titleSpan\");\r\n      }, 251);\r\n      word++;\r\n      if (word >= titleTextArrayOfLetters.length) {\r\n        word = 0;\r\n      }\r\n    }, 251);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const letsGoClick = (e: React.MouseEvent) => {\r\n    dispatch({\r\n      type: actionTypes.SET_NICKNAME,\r\n      nickname: nickName.trim(),\r\n    });\r\n\r\n    speak(\r\n      `Welcome to Tic Tac Toe, you can Join an existing Room or Create a new Room`\r\n    );\r\n  };\r\n\r\n  console.log(window.speechSynthesis.getVoices());\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"home\"\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <motion.div\r\n        id=\"home__contanier\"\r\n        className=\"home__contanier\"\r\n        variants={containerDivVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n      >\r\n        <motion.h1\r\n          className=\"home__title\"\r\n          id=\"home__title\"\r\n          initial=\"initial\"\r\n          animate=\"animate\"\r\n          variants={titleVariants}\r\n        >\r\n          TIC TAC TOE\r\n        </motion.h1>\r\n\r\n        {!nickname ? (\r\n          <motion.div\r\n            variants={divVariants}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n          >\r\n            <FormControl>\r\n              <TextField\r\n                autoFocus\r\n                style={{ marginBottom: 11, caretColor: \"transparent\" }}\r\n                onChange={(e) => setNickName(e.target.value.slice(0, 10))}\r\n                required\r\n                type=\"text\"\r\n                variant=\"outlined\"\r\n                placeholder=\"Enter a Nickname\"\r\n                value={nickName}\r\n                inputProps={{\r\n                  style: {\r\n                    textAlign: \"center\",\r\n                  },\r\n                }}\r\n              />\r\n              <div style={{ height: 51 }}>\r\n                <AnimatePresence>\r\n                  {nickName.trim() && (\r\n                    <motion.div\r\n                      initial=\"initial\"\r\n                      animate=\"animate\"\r\n                      exit=\"initial\"\r\n                      whileHover=\"hover\"\r\n                      variants={divVariants}\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        disableElevation\r\n                        color=\"secondary\"\r\n                        variant=\"contained\"\r\n                        onClick={letsGoClick}\r\n                      >\r\n                        Let's Go\r\n                      </Button>\r\n                    </motion.div>\r\n                  )}\r\n                </AnimatePresence>\r\n              </div>\r\n            </FormControl>\r\n          </motion.div>\r\n        ) : (\r\n          <AnimatePresence>\r\n            {nickname && (\r\n              <motion.div\r\n                variants={divVariants}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n                exit=\"initial\"\r\n              >\r\n                <ButtonGroup style={{ marginBottom: 51 }}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                    to=\"/join\"\r\n                    component={Link}\r\n                  >\r\n                    Join existing Room\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    disableElevation\r\n                    to=\"/create\"\r\n                    component={Link}\r\n                  >\r\n                    Create a new Room\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n        )}\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Join.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Game.tsx",["86","87","88","89","90","91"],"import { IconButton, Snackbar } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { db } from \"../common/firebase\";\r\nimport PlayerInfo from \"../components/PlayerInfo\";\r\nimport \"./Game.css\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport ShareRoundedIcon from \"@material-ui/icons/ShareRounded\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport Modal from \"../components/Modal\";\r\nimport { motion } from \"framer-motion\";\r\nimport { containerVariants } from \"../common/commonVariants\";\r\nimport {\r\n  centerBottomVariants,\r\n  centerCenterVariants,\r\n  centerTopTitleVariants,\r\n  centerTopVariants,\r\n} from \"../common/GameVariants\";\r\nimport Loader from \"../components/Loader\";\r\nimport ExitLoader from \"../components/ExitLoader\";\r\nimport { speak } from \"../common/speaker\";\r\n\r\ninterface PlayerInfoInterface {\r\n  id: string;\r\n  roomName: string;\r\n  passwordEnabled: boolean;\r\n  password: string;\r\n  creatorID: string;\r\n  creatorNickname: string;\r\n  guestID: string;\r\n  guestNickname: string;\r\n  creatorPoints: number;\r\n  guestPoints: number;\r\n  ties: number;\r\n  matrices: Array<string>;\r\n  chanceOf: string;\r\n}\r\n\r\nconst Game = () => {\r\n  const history = useHistory();\r\n  const [{ userID }] = useStateValue();\r\n  const [gameData, setGameData] = useState<PlayerInfoInterface>();\r\n  const { requestedRoomID } = useParams<{ requestedRoomID: string }>();\r\n  const [showLeaveModal, setShowLeaveModal] = useState(false);\r\n  const [showRestartModal, setShowRestartModal] = useState(false);\r\n  const [showSnackbar, setShowSnackbar] = useState(false);\r\n  const [disband, setDisband] = useState(false);\r\n  const [creatorPoints, setCreatorPoints] = useState(0);\r\n  const [guestPoints, setGuestPoints] = useState(0);\r\n  const [ties, setTies] = useState(0);\r\n  const [shouldUpdatePoints, setShouldUpdatePoints] = useState(true);\r\n  const [offlineMatrix, setOfflineMatrix] = useState<string[]>([\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n    \"\",\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (gameData?.matrices && gameData?.id) {\r\n      setCreatorPoints(gameData?.creatorPoints + 1);\r\n      setGuestPoints(gameData?.guestPoints + 1);\r\n      setTies(gameData?.ties + 1);\r\n    }\r\n  }, [gameData]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribeGameDataEvents = db\r\n      .collection(`rooms`)\r\n      .doc(requestedRoomID)\r\n      .onSnapshot((snapshot) =>\r\n        setGameData({\r\n          id: snapshot.id,\r\n          roomName: snapshot.data()?.roomName,\r\n          passwordEnabled: snapshot.data()?.enablePassword,\r\n          password: snapshot.data()?.password,\r\n          creatorID: snapshot.data()?.creatorID,\r\n          creatorNickname: snapshot.data()?.creatorNickname,\r\n          guestID: snapshot.data()?.guestID,\r\n          guestNickname: snapshot.data()?.guestNickname,\r\n          creatorPoints: snapshot.data()?.creatorPoints,\r\n          guestPoints: snapshot.data()?.guestPoints,\r\n          ties: snapshot.data()?.ties,\r\n          matrices: snapshot.data()?.matrix,\r\n          chanceOf: snapshot.data()?.chanceOf,\r\n        })\r\n      );\r\n\r\n    return () => unsubscribeGameDataEvents();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!gameData?.matrices && gameData?.id) {\r\n      db.collection(`rooms`)\r\n        .doc(gameData?.id)\r\n        .get()\r\n        .then((response) => {\r\n          if (!response.exists) {\r\n            setDisband(true);\r\n            history.replace(\"/\");\r\n          }\r\n        });\r\n    }\r\n    if (gameData?.matrices) {\r\n      setOfflineMatrix(gameData?.matrices);\r\n    }\r\n  }, [gameData]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      gameData?.matrices !== undefined &&\r\n      gameData?.id &&\r\n      gameData?.creatorID !== undefined &&\r\n      gameData?.creatorID === userID &&\r\n      shouldUpdatePoints\r\n    ) {\r\n      if (\r\n        (gameData?.matrices[0] === \"X\" &&\r\n          gameData?.matrices[1] === \"X\" &&\r\n          gameData?.matrices[2] === \"X\") ||\r\n        (gameData?.matrices[3] === \"X\" &&\r\n          gameData?.matrices[4] === \"X\" &&\r\n          gameData?.matrices[5] === \"X\") ||\r\n        (gameData?.matrices[6] === \"X\" &&\r\n          gameData?.matrices[7] === \"X\" &&\r\n          gameData?.matrices[8] === \"X\") ||\r\n        (gameData?.matrices[0] === \"X\" &&\r\n          gameData?.matrices[3] === \"X\" &&\r\n          gameData?.matrices[6] === \"X\") ||\r\n        (gameData?.matrices[1] === \"X\" &&\r\n          gameData?.matrices[4] === \"X\" &&\r\n          gameData?.matrices[7] === \"X\") ||\r\n        (gameData?.matrices[2] === \"X\" &&\r\n          gameData?.matrices[5] === \"X\" &&\r\n          gameData?.matrices[8] === \"X\") ||\r\n        (gameData?.matrices[0] === \"X\" &&\r\n          gameData?.matrices[4] === \"X\" &&\r\n          gameData?.matrices[8] === \"X\") ||\r\n        (gameData?.matrices[2] === \"X\" &&\r\n          gameData?.matrices[4] === \"X\" &&\r\n          gameData?.matrices[6] === \"X\")\r\n      ) {\r\n        db.collection(`rooms`)\r\n          .doc(gameData?.id)\r\n          .update({\r\n            creatorPoints: creatorPoints,\r\n          })\r\n          .then(() => setShowRestartModal(true));\r\n        setShouldUpdatePoints(false);\r\n      } else if (\r\n        (gameData?.matrices[0] === \"O\" &&\r\n          gameData?.matrices[1] === \"O\" &&\r\n          gameData?.matrices[2] === \"O\") ||\r\n        (gameData?.matrices[3] === \"O\" &&\r\n          gameData?.matrices[4] === \"O\" &&\r\n          gameData?.matrices[5] === \"O\") ||\r\n        (gameData?.matrices[6] === \"O\" &&\r\n          gameData?.matrices[7] === \"O\" &&\r\n          gameData?.matrices[8] === \"O\") ||\r\n        (gameData?.matrices[0] === \"O\" &&\r\n          gameData?.matrices[3] === \"O\" &&\r\n          gameData?.matrices[6] === \"O\") ||\r\n        (gameData?.matrices[1] === \"O\" &&\r\n          gameData?.matrices[4] === \"O\" &&\r\n          gameData?.matrices[7] === \"O\") ||\r\n        (gameData?.matrices[2] === \"O\" &&\r\n          gameData?.matrices[5] === \"O\" &&\r\n          gameData?.matrices[8] === \"O\") ||\r\n        (gameData?.matrices[0] === \"O\" &&\r\n          gameData?.matrices[4] === \"O\" &&\r\n          gameData?.matrices[8] === \"O\") ||\r\n        (gameData?.matrices[2] === \"O\" &&\r\n          gameData?.matrices[4] === \"O\" &&\r\n          gameData?.matrices[6] === \"O\")\r\n      ) {\r\n        db.collection(`rooms`)\r\n          .doc(gameData?.id)\r\n          .update({\r\n            guestPoints: guestPoints,\r\n          })\r\n          .then(() => setShowRestartModal(true));\r\n        setShouldUpdatePoints(false);\r\n      } else if (\r\n        gameData?.matrices[0] !== \"\" &&\r\n        gameData?.matrices[1] !== \"\" &&\r\n        gameData?.matrices[2] !== \"\" &&\r\n        gameData?.matrices[3] !== \"\" &&\r\n        gameData?.matrices[4] !== \"\" &&\r\n        gameData?.matrices[5] !== \"\" &&\r\n        gameData?.matrices[6] !== \"\" &&\r\n        gameData?.matrices[7] !== \"\" &&\r\n        gameData?.matrices[8] !== \"\"\r\n      ) {\r\n        db.collection(`rooms`)\r\n          .doc(gameData?.id)\r\n          .update({\r\n            ties: ties,\r\n          })\r\n          .then(() => setShowRestartModal(true));\r\n        setShouldUpdatePoints(false);\r\n      }\r\n    }\r\n  }, [offlineMatrix]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      offlineMatrix !== [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"] &&\r\n      offlineMatrix !== gameData?.matrices &&\r\n      gameData?.id &&\r\n      gameData?.matrices\r\n    ) {\r\n      updateDatabaseGridBox();\r\n    }\r\n  }, [offlineMatrix]);\r\n\r\n  useEffect(() => {\r\n    const grids = document.querySelectorAll(\r\n      \".game__boardBox\"\r\n    ) as NodeListOf<HTMLElement>;\r\n    if (grids) {\r\n      grids.forEach((grid: HTMLElement) => {\r\n        if (grid.innerText === \"X\") {\r\n          gameData?.creatorID === userID && (grid.style.color = \"green\");\r\n          gameData?.guestID === userID && (grid.style.color = \"red\");\r\n        } else if (grid.innerText === \"O\") {\r\n          gameData?.creatorID === userID && (grid.style.color = \"red\");\r\n          gameData?.guestID === userID && (grid.style.color = \"green\");\r\n        }\r\n      });\r\n    }\r\n  }, [offlineMatrix]);\r\n\r\n  const handleGridBoxClicks = (e: React.MouseEvent, index: number) => {\r\n    if (offlineMatrix[index] === \"\") {\r\n      if (gameData?.chanceOf === \"creator\" && gameData?.creatorID === userID) {\r\n        setOfflineMatrix(\r\n          offlineMatrix.map((element, elementIndex) => {\r\n            if (elementIndex === index) {\r\n              return \"X\";\r\n            } else {\r\n              return element;\r\n            }\r\n          })\r\n        );\r\n      } else if (\r\n        gameData?.chanceOf === \"guest\" &&\r\n        gameData?.guestID === userID\r\n      ) {\r\n        setOfflineMatrix(\r\n          offlineMatrix.map((element, elementIndex) => {\r\n            if (elementIndex === index) {\r\n              return \"O\";\r\n            } else {\r\n              return element;\r\n            }\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const updateDatabaseGridBox = () => {\r\n    db.collection(`rooms`)\r\n      .doc(gameData?.id)\r\n      .update({\r\n        matrix: offlineMatrix,\r\n        chanceOf: gameData?.chanceOf === \"creator\" ? \"guest\" : \"creator\",\r\n      });\r\n  };\r\n\r\n  if (showSnackbar) {\r\n    setTimeout(() => setShowSnackbar(false), 4000);\r\n  }\r\n\r\n  return gameData?.guestID ? (\r\n    <motion.div\r\n      className=\"game\"\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\r\n        open={showSnackbar}\r\n        onClose={() => setShowSnackbar(false)}\r\n        message=\"Spactating link copied to the clipboard\"\r\n      />\r\n      <Modal\r\n        isHost={gameData?.creatorID === userID}\r\n        isGuest={gameData?.guestID === userID}\r\n        roomID={gameData?.id}\r\n        showModal={showLeaveModal}\r\n        setShowModal={setShowLeaveModal}\r\n        type=\"leave\"\r\n        setShouldUpdatePoints={undefined}\r\n      />\r\n      <Modal\r\n        isHost={gameData?.creatorID === userID}\r\n        isGuest={gameData?.guestID === userID}\r\n        roomID={gameData?.id}\r\n        showModal={showRestartModal}\r\n        setShowModal={setShowRestartModal}\r\n        setShouldUpdatePoints={setShouldUpdatePoints}\r\n        type=\"restart\"\r\n      />\r\n      <div className=\"game__guest\">\r\n        <PlayerInfo\r\n          id={gameData?.guestID}\r\n          name={gameData?.guestNickname}\r\n          score={gameData?.guestPoints}\r\n          side=\"left\"\r\n        />\r\n      </div>\r\n      <div\r\n        className=\"game__center\"\r\n        style={{\r\n          pointerEvents: showRestartModal || showLeaveModal ? \"none\" : \"auto\",\r\n        }}\r\n      >\r\n        <motion.div\r\n          className=\"game__centerTop\"\r\n          variants={centerTopVariants}\r\n          initial=\"initial\"\r\n          animate=\"animate\"\r\n        >\r\n          <IconButton\r\n            onClick={() => {\r\n              setShowSnackbar(true);\r\n              navigator.clipboard.writeText(\r\n                `Spectating link: http://127.0.0.1:3000/game/${gameData?.id}`\r\n              );\r\n            }}\r\n          >\r\n            <ShareRoundedIcon fontSize=\"large\" />\r\n          </IconButton>\r\n          <motion.h1\r\n            className=\"game__roomName\"\r\n            variants={centerTopTitleVariants}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n            whileHover=\"hover\"\r\n          >\r\n            {gameData?.roomName}\r\n          </motion.h1>\r\n          <IconButton onClick={() => setShowLeaveModal(true)}>\r\n            <SettingsIcon fontSize=\"large\" className=\"settingsIcon\" />\r\n          </IconButton>\r\n        </motion.div>\r\n        <motion.div\r\n          className=\"game__centerCenter\"\r\n          variants={centerCenterVariants}\r\n          initial=\"initial\"\r\n          animate=\"animate\"\r\n        >\r\n          <div className=\"game__board\">\r\n            {gameData?.matrices?.map((matrixElement, index) => (\r\n              <motion.div\r\n                onClick={(e) => handleGridBoxClicks(e, index)}\r\n                key={index}\r\n                className=\"game__boardBox\"\r\n                style={{\r\n                  cursor:\r\n                    ((gameData?.chanceOf === \"creator\" &&\r\n                      gameData?.creatorID === userID) ||\r\n                      (gameData?.chanceOf === \"guest\" &&\r\n                        gameData?.guestID === userID)) &&\r\n                    matrixElement.toString() === \"\"\r\n                      ? \"cell\"\r\n                      : \"not-allowed\",\r\n                }}\r\n              >\r\n                {matrixElement}\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        </motion.div>\r\n        <div className=\"game__centerBottom\">\r\n          <motion.div\r\n            className=\"game__centerBottomTieContainer\"\r\n            variants={centerBottomVariants}\r\n            initial=\"initial\"\r\n            animate=\"animate\"\r\n          >\r\n            <h2 className=\"game__centerBottomTieTitle\">Ties</h2>\r\n            <h2 className=\"game__centerBottomTieScore\">{gameData?.ties}</h2>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n      <div className=\"game__creator\">\r\n        <PlayerInfo\r\n          id={gameData?.creatorID}\r\n          name={gameData?.creatorNickname}\r\n          score={gameData?.creatorPoints}\r\n          side=\"right\"\r\n        />\r\n      </div>\r\n    </motion.div>\r\n  ) : disband ? (\r\n    <ExitLoader />\r\n  ) : (\r\n    <Loader\r\n      id={gameData?.id}\r\n      isHost={gameData?.creatorID === userID}\r\n      password={gameData?.password}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\context\\StateProvider.js",[],["92","93"],"E:\\ReactProjects\\tic-tac-toe\\src\\context\\reducer.ts",[],"E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Create.tsx",["94"],"import {\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { green, lightGreen, red } from \"@material-ui/core/colors\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport VanillaTilt from \"vanilla-tilt\";\r\nimport {\r\n  buttonVariants,\r\n  containerDivVariants,\r\n  containerVariants,\r\n  passwordVariant,\r\n} from \"../common/commonVariants\";\r\nimport { db } from \"../common/firebase\";\r\nimport { speak } from \"../common/speaker\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport \"./Create.css\";\r\n\r\nconst titleVariant = {\r\n  initial: {\r\n    x: \"100vw\",\r\n  },\r\n  animate: {\r\n    x: 0,\r\n    transition: {\r\n      delay: 0.2,\r\n      type: \"spring\",\r\n    },\r\n  },\r\n};\r\nconst formVariant = {\r\n  initial: {\r\n    x: \"-100vw\",\r\n  },\r\n  animate: {\r\n    x: 0,\r\n    transition: {\r\n      delay: 0.4,\r\n      type: \"spring\",\r\n    },\r\n  },\r\n};\r\n\r\nconst CustomSwitch = withStyles({\r\n  switchBase: {\r\n    color: red[\"A700\"],\r\n    \"&$checked\": {\r\n      color: green[\"A700\"],\r\n    },\r\n    \"&$checked + $track\": {\r\n      backgroundColor: lightGreen[\"A400\"],\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\nconst Create = () => {\r\n  const history = useHistory();\r\n  const [{ nickname, userID }] = useStateValue();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [enablePassword, setEnablePassword] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    nickname ? setRoomName(`${nickname}'s Room`) : history.replace(\"/\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const homeContainer: HTMLElement = document.querySelector(\r\n      \"#create__contanier\"\r\n    ) as HTMLElement;\r\n    if (homeContainer) {\r\n      VanillaTilt.init(homeContainer, {\r\n        max: 21,\r\n        speed: 444,\r\n        glare: true,\r\n        \"max-glare\": 1,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const handleCreateButtonClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n\r\n    const chanceOfArray = [\"creator\", \"guest\"];\r\n    const chanceOf = chanceOfArray[Math.floor(Math.random() * 2)];\r\n\r\n    db.collection(\"rooms\")\r\n      .where(\"creatorID\", \"==\", userID)\r\n      .get()\r\n      .then((response) => {\r\n        if (!response.docs.length) {\r\n          db.collection(`rooms`)\r\n            .where(\"guestID\", \"==\", userID)\r\n            .get()\r\n            .then((response) => {\r\n              if (!response.docs.length) {\r\n                db.collection(`rooms`)\r\n                  .add({\r\n                    roomName: roomName,\r\n                    passwordEnabled: enablePassword,\r\n                    password: password,\r\n                    creatorID: userID,\r\n                    creatorNickname: nickname,\r\n                    guestID: \"\",\r\n                    guestNickname: \"\",\r\n                    creatorPoints: 0,\r\n                    guestPoints: 0,\r\n                    ties: 0,\r\n                    matrix: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n                    chanceOf: chanceOf,\r\n                  })\r\n                  .then((response) => {\r\n                    speak(\"Room created\");\r\n                    history.replace(`/game/${response.id}`);\r\n                  });\r\n              } else {\r\n                const createNewRoom = window.confirm(\r\n                  `You are already playing as a guest in another Room, \\nDo you wish to exit \"${\r\n                    response.docs[0].data().roomName\r\n                  }\" and create a new Room?`\r\n                );\r\n\r\n                if (createNewRoom) {\r\n                  db.collection(`room`)\r\n                    .doc(response.docs[0].id)\r\n                    .update({\r\n                      guestID: \"\",\r\n                      guestNickname: \"\",\r\n                      guestPoints: 0,\r\n                      creatorPoints: 0,\r\n                      ties: 0,\r\n                      matrix: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n                    })\r\n                    .then(() => {\r\n                      speak(\"Room created\");\r\n                      handleCreateButtonClick(e);\r\n                    });\r\n                }\r\n              }\r\n            });\r\n        } else {\r\n          const enterPreviousRoom = window.confirm(\r\n            `You have already hosted a Room. \\nDo you want to enter your previous Room \"${\r\n              response.docs[0].data().roomName\r\n            }\"?`\r\n          );\r\n\r\n          if (enterPreviousRoom) {\r\n            speak(\"Entering old room\");\r\n            history.replace(`/game/${response.docs[0].id}`);\r\n          } else {\r\n            const createNewRoom = window.confirm(\r\n              `Do you want to create a new Room with this new Data?`\r\n            );\r\n\r\n            if (createNewRoom) {\r\n              db.collection(`rooms`)\r\n                .doc(response.docs[0].id)\r\n                .update({\r\n                  roomName: roomName,\r\n                  passwordEnabled: enablePassword,\r\n                  password: password,\r\n                  creatorID: userID,\r\n                  creatorNickname: nickname,\r\n                  guestID: \"\",\r\n                  guestNickname: \"\",\r\n                  creatorPoints: 0,\r\n                  guestPoints: 0,\r\n                  ties: 0,\r\n                  matrix: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n                  chanceOf: chanceOf,\r\n                })\r\n                .then(() => {\r\n                  speak(`Room updated with new Data`);\r\n                  history.replace(`/game/${response.docs[0].id}`);\r\n                });\r\n            }\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"create\"\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <motion.div\r\n        id=\"create__contanier\"\r\n        className=\"create__contanier\"\r\n        variants={containerDivVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n      >\r\n        <motion.div\r\n          variants={titleVariant}\r\n          initial=\"initial\"\r\n          animate=\"animate\"\r\n          whileHover=\"hover\"\r\n          style={{ marginBottom: 21 }}\r\n        >\r\n          <Typography component=\"h3\" variant=\"h3\">\r\n            Create new Room\r\n          </Typography>\r\n        </motion.div>\r\n        <motion.div variants={formVariant} initial=\"initial\" animate=\"animate\">\r\n          <FormControl>\r\n            <TextField\r\n              autoFocus\r\n              style={{ marginBottom: 11, caretColor: \"transparent\" }}\r\n              onChange={(e) => setRoomName(e.target.value.slice(0, 17))}\r\n              required\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter Room name\"\r\n              value={roomName}\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                },\r\n              }}\r\n            />\r\n            <FormControlLabel\r\n              value=\"start\"\r\n              control={\r\n                <CustomSwitch\r\n                  color=\"primary\"\r\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                    setEnablePassword(e.target.checked);\r\n                    e.target.checked === false && setPassword(\"\");\r\n                    speak(\r\n                      e.target.checked\r\n                        ? \"Enter password!\"\r\n                        : \"Password toggled off!\"\r\n                    );\r\n                  }}\r\n                />\r\n              }\r\n              label=\"Enable Password\"\r\n              labelPlacement=\"top\"\r\n            />\r\n            <AnimatePresence>\r\n              {enablePassword && (\r\n                <motion.div\r\n                  variants={passwordVariant}\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"initial\"\r\n                >\r\n                  <TextField\r\n                    autoFocus\r\n                    style={{ marginBottom: 11, caretColor: \"transparent\" }}\r\n                    onChange={(e) => setPassword(e.target.value.slice(0, 12))}\r\n                    required\r\n                    type=\"text\"\r\n                    variant=\"outlined\"\r\n                    placeholder=\"Enter Room Password\"\r\n                    value={password}\r\n                    inputProps={{\r\n                      style: {\r\n                        textAlign: \"center\",\r\n                      },\r\n                    }}\r\n                  />\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n            <div style={{ height: 51 }}>\r\n              <AnimatePresence>\r\n                {((roomName.trim() && !enablePassword) ||\r\n                  (enablePassword && password.trim().length >= 4)) && (\r\n                  <motion.div\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    exit=\"initial\"\r\n                    whileHover=\"hover\"\r\n                    variants={buttonVariants}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      onClick={handleCreateButtonClick}\r\n                    >\r\n                      Create\r\n                    </Button>\r\n                  </motion.div>\r\n                )}\r\n              </AnimatePresence>\r\n            </div>\r\n          </FormControl>\r\n        </motion.div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\common\\commonVariants.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\common\\firebase.ts",["95"],"import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAOUvTYYwB7o_2AADRvdkOJ3HdkbsSinAc\",\r\n  authDomain: \"ticctactoee.firebaseapp.com\",\r\n  projectId: \"ticctactoee\",\r\n  storageBucket: \"ticctactoee.appspot.com\",\r\n  messagingSenderId: \"1088964664906\",\r\n  appId: \"1:1088964664906:web:08f5427b484574467ed0b3\",\r\n  measurementId: \"G-0KNK4BGJ4Y\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\n\r\nexport { db };\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\components\\PlayerInfo.tsx",["96"],"import { motion } from \"framer-motion\";\r\nimport { useEffect } from \"react\";\r\nimport { actionTypes } from \"../context/reducer\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport \"./PlayerInfo.css\";\r\n\r\ninterface PlayerInfoInterface {\r\n  id: string | undefined;\r\n  name: string | undefined;\r\n  score: number | undefined;\r\n  side: string;\r\n}\r\n\r\nconst PlayerInfo = ({ id, name, score, side }: PlayerInfoInterface) => {\r\n  const [{ userID }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    const userIDFromLocalStorage = localStorage.getItem(\"userID\");\r\n    if (userIDFromLocalStorage) {\r\n      dispatch({\r\n        type: actionTypes.SET_USER_ID,\r\n        userID: userIDFromLocalStorage,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div\r\n      style={{\r\n        borderTopLeftRadius: side === \"right\" ? 51 : 0,\r\n        borderBottomLeftRadius: side === \"right\" ? 51 : 0,\r\n        borderTopRightRadius: side === \"left\" ? 51 : 0,\r\n        borderBottomRightRadius: side === \"left\" ? 51 : 0,\r\n        borderRightWidth: side === \"left\" ? 2 : 0,\r\n        borderLeftWidth: side === \"right\" ? 2 : 0,\r\n        borderLeftStyle: \"solid\",\r\n        borderRightStyle: \"solid\",\r\n      }}\r\n      className=\"userInfo\"\r\n      whileHover={{\r\n        x: side === \"left\" ? -24 : 24,\r\n        transition: {\r\n          duration: 0.4,\r\n          yoyo: Infinity,\r\n        },\r\n      }}\r\n    >\r\n      <motion.div className=\"userInfo__container\">\r\n        <motion.h2\r\n          initial={{\r\n            x: side === \"left\" ? \"-100vw\" : \"100vw\",\r\n          }}\r\n          animate={{\r\n            x: 0,\r\n          }}\r\n          transition={{\r\n            type: \"spring\",\r\n            bounce: 0.44,\r\n            stiffness: 111,\r\n            delay: 1.5,\r\n            damping: 9.5,\r\n          }}\r\n          className=\"userInfo__name\"\r\n        >\r\n          {userID === id ? \"You\" : name}\r\n        </motion.h2>\r\n        <motion.h1\r\n          initial={{\r\n            x: side === \"left\" ? \"-100vw\" : \"100vw\",\r\n          }}\r\n          animate={{\r\n            x: 0,\r\n          }}\r\n          transition={{\r\n            type: \"spring\",\r\n            bounce: 0.44,\r\n            stiffness: 111,\r\n            delay: 1.8,\r\n            damping: 9.5,\r\n          }}\r\n          className=\"userInfo__score\"\r\n        >\r\n          {score}\r\n        </motion.h1>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PlayerInfo;\r\n",["97","98"],"E:\\ReactProjects\\tic-tac-toe\\src\\components\\Modal.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\common\\GameVariants.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\components\\Loader.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\components\\ExitLoader.tsx",["99"],"import { motion } from \"framer-motion\";\r\nimport { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport VanillaTilt from \"vanilla-tilt\";\r\nimport { containerDivVariants } from \"../common/commonVariants\";\r\nimport \"./ExitLoader.css\";\r\n\r\nconst ExitLoader = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    history.replace(\"/\");\r\n    window.location.reload();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const homeContainer: HTMLElement = document.querySelector(\r\n      \"#exitLoader__contanier\"\r\n    ) as HTMLElement;\r\n    if (homeContainer) {\r\n      VanillaTilt.init(homeContainer, {\r\n        max: 21,\r\n        speed: 444,\r\n        glare: true,\r\n        \"max-glare\": 1,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div className=\"exitLoader\">\r\n      <motion.div\r\n        id=\"exitLoader__contanier\"\r\n        className=\"exitLoader__contanier\"\r\n        variants={containerDivVariants}\r\n        initial=\"hidden\"\r\n        animate=\"visible\"\r\n        exit=\"exit\"\r\n      >\r\n        <div className=\"spinner\">\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default ExitLoader;\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\common\\Speaker.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\common\\speaker.tsx",[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":65,"column":6,"nodeType":"106","endLine":65,"endColumn":8,"suggestions":"107"},{"ruleId":"108","severity":1,"message":"109","line":21,"column":10,"nodeType":"110","messageId":"111","endLine":21,"endColumn":15},{"ruleId":"104","severity":1,"message":"112","line":95,"column":6,"nodeType":"106","endLine":95,"endColumn":8,"suggestions":"113"},{"ruleId":"104","severity":1,"message":"114","line":112,"column":6,"nodeType":"106","endLine":112,"endColumn":16,"suggestions":"115"},{"ruleId":"104","severity":1,"message":"116","line":208,"column":6,"nodeType":"106","endLine":208,"endColumn":21,"suggestions":"117"},{"ruleId":"104","severity":1,"message":"118","line":219,"column":6,"nodeType":"106","endLine":219,"endColumn":21,"suggestions":"119"},{"ruleId":"104","severity":1,"message":"120","line":236,"column":6,"nodeType":"106","endLine":236,"endColumn":21,"suggestions":"121"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"122","line":74,"column":6,"nodeType":"106","endLine":74,"endColumn":8,"suggestions":"123"},{"ruleId":"108","severity":1,"message":"124","line":13,"column":7,"nodeType":"110","messageId":"111","endLine":13,"endColumn":18},{"ruleId":"104","severity":1,"message":"105","line":25,"column":6,"nodeType":"106","endLine":25,"endColumn":8,"suggestions":"125"},{"ruleId":"100","replacedBy":"126"},{"ruleId":"102","replacedBy":"127"},{"ruleId":"104","severity":1,"message":"114","line":14,"column":6,"nodeType":"106","endLine":14,"endColumn":8,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["131"],"@typescript-eslint/no-unused-vars","'speak' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'requestedRoomID'. Either include it or remove the dependency array.",["132"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'creatorPoints', 'gameData?.creatorID', 'gameData?.id', 'gameData?.matrices', 'guestPoints', 'shouldUpdatePoints', 'ties', and 'userID'. Either include them or remove the dependency array.",["134"],"React Hook useEffect has missing dependencies: 'gameData?.id', 'gameData?.matrices', and 'updateDatabaseGridBox'. Either include them or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'gameData?.creatorID', 'gameData?.guestID', and 'userID'. Either include them or remove the dependency array.",["136"],"React Hook useEffect has missing dependencies: 'history' and 'nickname'. Either include them or remove the dependency array.",["137"],"'firebaseApp' is assigned a value but never used.",["138"],["129"],["130"],["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"140","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [dispatch]",{"range":"157","text":"158"},"Update the dependencies array to be: [requestedRoomID]",{"range":"159","text":"160"},"Update the dependencies array to be: [gameData, history]",{"range":"161","text":"162"},"Update the dependencies array to be: [creatorPoints, gameData?.creatorID, gameData?.id, gameData?.matrices, guestPoints, offlineMatrix, shouldUpdatePoints, ties, userID]",{"range":"163","text":"164"},"Update the dependencies array to be: [gameData?.id, gameData?.matrices, offlineMatrix, updateDatabaseGridBox]",{"range":"165","text":"166"},"Update the dependencies array to be: [gameData?.creatorID, gameData?.guestID, offlineMatrix, userID]",{"range":"167","text":"168"},"Update the dependencies array to be: [history, nickname]",{"range":"169","text":"170"},{"range":"171","text":"158"},"Update the dependencies array to be: [history]",{"range":"172","text":"173"},[1853,1855],"[dispatch]",[3221,3223],"[requestedRoomID]",[3625,3635],"[gameData, history]",[7102,7117],"[creatorPoints, gameData?.creatorID, gameData?.id, gameData?.matrices, guestPoints, offlineMatrix, shouldUpdatePoints, ties, userID]",[7368,7383],"[gameData?.id, gameData?.matrices, offlineMatrix, updateDatabaseGridBox]",[7991,8006],"[gameData?.creatorID, gameData?.guestID, offlineMatrix, userID]",[1676,1678],"[history, nickname]",[731,733],[409,411],"[history]"]