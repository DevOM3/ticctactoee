[{"E:\\ReactProjects\\tic-tac-toe\\src\\index.tsx":"1","E:\\ReactProjects\\tic-tac-toe\\src\\reportWebVitals.ts":"2","E:\\ReactProjects\\tic-tac-toe\\src\\App.tsx":"3","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Home.tsx":"4","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Join.tsx":"5","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Game.tsx":"6","E:\\ReactProjects\\tic-tac-toe\\src\\context\\StateProvider.js":"7","E:\\ReactProjects\\tic-tac-toe\\src\\context\\reducer.ts":"8","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Create.tsx":"9","E:\\ReactProjects\\tic-tac-toe\\src\\common\\commonVariants.tsx":"10","E:\\ReactProjects\\tic-tac-toe\\src\\common\\firebase.ts":"11","E:\\ReactProjects\\tic-tac-toe\\src\\components\\PlayerInfo.tsx":"12","E:\\ReactProjects\\tic-tac-toe\\src\\components\\Modal.tsx":"13","E:\\ReactProjects\\tic-tac-toe\\src\\common\\GameVariants.tsx":"14","E:\\ReactProjects\\tic-tac-toe\\src\\components\\Loader.tsx":"15"},{"size":798,"mtime":1609056531350,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"18","hashOfConfig":"17"},{"size":809,"mtime":1609231232773,"results":"19","hashOfConfig":"17"},{"size":5489,"mtime":1609060832140,"results":"20","hashOfConfig":"17"},{"size":9096,"mtime":1609225239583,"results":"21","hashOfConfig":"17"},{"size":13320,"mtime":1609245865017,"results":"22","hashOfConfig":"17"},{"size":368,"mtime":1609005094429,"results":"23","hashOfConfig":"17"},{"size":545,"mtime":1609060112828,"results":"24","hashOfConfig":"17"},{"size":8191,"mtime":1609225271462,"results":"25","hashOfConfig":"17"},{"size":1031,"mtime":1609216705990,"results":"26","hashOfConfig":"17"},{"size":484,"mtime":1609059086024,"results":"27","hashOfConfig":"17"},{"size":1812,"mtime":1609166255293,"results":"28","hashOfConfig":"17"},{"size":3915,"mtime":1609236517546,"results":"29","hashOfConfig":"17"},{"size":1170,"mtime":1609168204546,"results":"30","hashOfConfig":"17"},{"size":1720,"mtime":1609222337425,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"b40iom",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\ReactProjects\\tic-tac-toe\\src\\index.tsx",[],["70","71"],"E:\\ReactProjects\\tic-tac-toe\\src\\reportWebVitals.ts",[],"E:\\ReactProjects\\tic-tac-toe\\src\\App.tsx",["72","73"],"import \"./App.css\";\nimport Home from \"./pages/Home\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport Join from \"./pages/Join\";\nimport Game from \"./pages/Game\";\nimport Create from \"./pages/Create\";\nimport { AnimatePresence } from \"framer-motion\";\n\nfunction App() {\n  const location = useLocation();\n\n  return (\n    <div className=\"app\">\n      <AnimatePresence exitBeforeEnter>\n        <Route exact path=\"/game/:requestedRoomID\" key=\"game\">\n          <Game />\n        </Route>\n        <Route exact path=\"/create\" key=\"create\">\n          <Create />\n        </Route>\n        <Route exact path=\"/join\" key=\"join\">\n          <Join />\n        </Route>\n        <Route exact path=\"/\" key=\"home\">\n          <Home />\n        </Route>\n      </AnimatePresence>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Home.tsx",["74"],"import { Button, ButtonGroup, FormControl, TextField } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Home.css\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport { actionTypes } from \"../context/reducer\";\r\nimport { containerVariants } from \"../common/commonVariants\";\r\nimport { v4 } from \"uuid\";\r\n\r\nconst titleVariants = {\r\n  initial: { y: \"-100vh\" },\r\n  animate: { y: 0, transition: { delay: 0.2, type: \"spring\", stiffness: 120 } },\r\n};\r\nconst divVariants = {\r\n  initial: { y: \"100vh\" },\r\n  animate: { y: 0, transition: { delay: 0.2, type: \"spring\", stiffness: 51 } },\r\n  hover: {\r\n    scale: 1.1,\r\n    transition: {\r\n      duration: 0.3,\r\n      yoyo: Infinity,\r\n    },\r\n  },\r\n};\r\n\r\nconst Home = () => {\r\n  const [{ nickname }, dispatch] = useStateValue();\r\n  const [nickName, setNickName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const userIDFromLocalStorage = localStorage.getItem(\"userID\");\r\n    if (userIDFromLocalStorage) {\r\n      dispatch({\r\n        type: actionTypes.SET_USER_ID,\r\n        userID: userIDFromLocalStorage,\r\n      });\r\n    } else {\r\n      const generatedUserID = v4();\r\n      localStorage.setItem(\"userID\", generatedUserID);\r\n      dispatch({\r\n        type: actionTypes.SET_USER_ID,\r\n        userID: generatedUserID,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const title: HTMLHeadingElement = document.getElementById(\r\n      \"home__title\"\r\n    ) as HTMLHeadingElement;\r\n    const titleText: string = title.innerText;\r\n\r\n    const titleTextArrayOfLetters: string[] = titleText.split(\"\");\r\n    title.innerText = \"\";\r\n\r\n    titleTextArrayOfLetters.forEach((titleWord) => {\r\n      title.innerHTML += `<span>${titleWord}</span>`;\r\n      titleWord === \"C\" && (title.innerHTML += \"&nbsp;\");\r\n    });\r\n\r\n    let word: number = 0;\r\n    const interval = setInterval(() => {\r\n      const span: HTMLSpanElement = document.querySelectorAll(\"span\")[word];\r\n      span.classList.add(\"home__titleSpan\");\r\n      setTimeout(() => {\r\n        span.classList.remove(\"home__titleSpan\");\r\n      }, 251);\r\n      word++;\r\n      if (word >= titleTextArrayOfLetters.length) {\r\n        word = 0;\r\n      }\r\n    }, 251);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"home\"\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <motion.h1\r\n        className=\"home__title\"\r\n        id=\"home__title\"\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n        variants={titleVariants}\r\n      >\r\n        TIC TAC TOE\r\n      </motion.h1>\r\n\r\n      {!nickname ? (\r\n        <motion.div variants={divVariants} initial=\"initial\" animate=\"animate\">\r\n          <FormControl>\r\n            <TextField\r\n              style={{ marginBottom: 11 }}\r\n              onChange={(e) => setNickName(e.target.value)}\r\n              required\r\n              type=\"text\"\r\n              variant=\"outlined\"\r\n              placeholder=\"Enter a Nickname\"\r\n              value={nickName}\r\n              inputProps={{\r\n                style: {\r\n                  textAlign: \"center\",\r\n                },\r\n              }}\r\n            />\r\n            <div style={{ height: 51 }}>\r\n              <AnimatePresence>\r\n                {nickName.trim() && (\r\n                  <motion.div\r\n                    initial=\"initial\"\r\n                    animate=\"animate\"\r\n                    exit=\"initial\"\r\n                    whileHover=\"hover\"\r\n                    variants={divVariants}\r\n                    style={{\r\n                      display: \"flex\",\r\n                      justifyContent: \"center\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Button\r\n                      disableElevation\r\n                      color=\"secondary\"\r\n                      variant=\"contained\"\r\n                      onClick={() => {\r\n                        dispatch({\r\n                          type: actionTypes.SET_NICKNAME,\r\n                          nickname: nickName.trim(),\r\n                        });\r\n                      }}\r\n                    >\r\n                      Let's Go\r\n                    </Button>\r\n                  </motion.div>\r\n                )}\r\n              </AnimatePresence>\r\n            </div>\r\n          </FormControl>\r\n        </motion.div>\r\n      ) : (\r\n        <AnimatePresence>\r\n          {nickname && (\r\n            <motion.div\r\n              variants={divVariants}\r\n              initial=\"initial\"\r\n              animate=\"animate\"\r\n              exit=\"initial\"\r\n            >\r\n              <ButtonGroup>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disableElevation\r\n                  to=\"/join\"\r\n                  component={Link}\r\n                >\r\n                  Join existing Room\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  disableElevation\r\n                  to=\"/create\"\r\n                  component={Link}\r\n                >\r\n                  Create a new Room\r\n                </Button>\r\n              </ButtonGroup>\r\n            </motion.div>\r\n          )}\r\n        </AnimatePresence>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Join.tsx",["75"],"import { Button, FormControl, TextField, Typography } from \"@material-ui/core\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  buttonVariants,\r\n  containerVariants,\r\n  passwordVariant,\r\n} from \"../common/commonVariants\";\r\nimport { db } from \"../common/firebase\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport \"./Join.css\";\r\n\r\nconst titleVariant = {\r\n  initial: {\r\n    x: \"-100vw\",\r\n  },\r\n  animate: {\r\n    x: 0,\r\n    transition: {\r\n      delay: 0.2,\r\n      type: \"spring\",\r\n    },\r\n  },\r\n};\r\nconst formVariant = {\r\n  initial: {\r\n    x: \"100vw\",\r\n  },\r\n  animate: {\r\n    x: 0,\r\n    transition: {\r\n      delay: 0.5,\r\n      type: \"spring\",\r\n    },\r\n  },\r\n};\r\n\r\nconst Join = () => {\r\n  const history = useHistory();\r\n  const [{ nickname, userID }] = useStateValue();\r\n  const [joiningID, setJoiningID] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n  const [showPasswordField, setShowPasswordField] = useState(false);\r\n\r\n  useEffect(() => {\r\n    !nickname && history.replace(\"/\");\r\n  }, []);\r\n\r\n  const handleJoinClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n\r\n    const joinRoom = () => {\r\n      db.collection(`rooms`)\r\n        .doc(joiningID)\r\n        .update({\r\n          guestID: userID,\r\n          guestNickname: nickname,\r\n          guestPoints: 0,\r\n          creatorPoints: 0,\r\n          ties: 0,\r\n        })\r\n        .then(() => history.replace(`/game/${joiningID}`));\r\n    };\r\n\r\n    db.collection(\"rooms\")\r\n      .doc(joiningID)\r\n      .get()\r\n      .then((response) => {\r\n        if (response.exists) {\r\n          db.collection(\"rooms\")\r\n            .where(\"creatorID\", \"==\", userID)\r\n            .get()\r\n            .then((response) => {\r\n              if (!response.docs.length) {\r\n                db.collection(`rooms`)\r\n                  .where(\"guestID\", \"==\", userID)\r\n                  .get()\r\n                  .then((response) => {\r\n                    if (!response.docs.length) {\r\n                      db.collection(`rooms`)\r\n                        .doc(joiningID)\r\n                        .get()\r\n                        .then((data) => {\r\n                          if (!data.data()?.guestID) {\r\n                            db.collection(`rooms`)\r\n                              .doc(joiningID)\r\n                              .get()\r\n                              .then((response) => {\r\n                                if (response.data()?.passwordEnabled) {\r\n                                  !showPasswordField &&\r\n                                    setShowPasswordField(true);\r\n                                  if (showPasswordField) {\r\n                                    if (\r\n                                      password === response.data()?.password\r\n                                    ) {\r\n                                      joinRoom();\r\n                                    } else {\r\n                                      setPasswordError(\"Wrong Password\");\r\n                                    }\r\n                                  }\r\n                                } else {\r\n                                  joinRoom();\r\n                                }\r\n                              });\r\n                          } else {\r\n                            setError(\"Room is already Occupied\");\r\n                          }\r\n                        });\r\n                    } else {\r\n                      const leaveJoinedRoomAndJoinThisRoom = window.confirm(\r\n                        `You have already joined a Room named \"${\r\n                          response.docs[0].data().roomName\r\n                        }\".\\nDo you wish to leave that Room and join this Room?`\r\n                      );\r\n\r\n                      if (leaveJoinedRoomAndJoinThisRoom) {\r\n                        db.collection(`rooms`)\r\n                          .doc(response.docs[0].id)\r\n                          .update({\r\n                            guestID: \"\",\r\n                            guestNickname: \"\",\r\n                            guestPoints: 0,\r\n                            creatorPoints: 0,\r\n                            ties: 0,\r\n                            matrix: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n                          })\r\n                          .then(() => handleJoinClick(e));\r\n                      }\r\n                    }\r\n                  });\r\n              } else {\r\n                const deleteCreatedRoomAndJoinThisRoom = window.confirm(\r\n                  `You already created another Room, \\nDo you wish to disbanned \"${\r\n                    response.docs[0].data().roomName\r\n                  }\" and join this Room?`\r\n                );\r\n\r\n                if (deleteCreatedRoomAndJoinThisRoom) {\r\n                  db.collection(`rooms`)\r\n                    .doc(response.docs[0].id)\r\n                    .delete()\r\n                    .then(() => handleJoinClick(e));\r\n                }\r\n              }\r\n            });\r\n        } else {\r\n          setError(\"Invalid Room ID\");\r\n          setJoiningID(\"\");\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"join\"\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <motion.div\r\n        variants={titleVariant}\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n        style={{ marginBottom: 21 }}\r\n      >\r\n        <Typography component=\"h3\" variant=\"h3\">\r\n          Join existing Room\r\n        </Typography>\r\n      </motion.div>\r\n      <motion.div variants={formVariant} initial=\"initial\" animate=\"animate\">\r\n        <FormControl>\r\n          <AnimatePresence>\r\n            {!showPasswordField && (\r\n              <motion.div\r\n                variants={passwordVariant}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n                exit=\"initial\"\r\n              >\r\n                <TextField\r\n                  helperText={error}\r\n                  FormHelperTextProps={{ style: { textAlign: \"center\" } }}\r\n                  error={!!error}\r\n                  style={{ marginBottom: 11 }}\r\n                  onChange={(e) => {\r\n                    setJoiningID(e.target.value);\r\n                    if (error && e.target.value.trim()) setError(\"\");\r\n                  }}\r\n                  required\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Enter Joining ID\"\r\n                  value={joiningID}\r\n                  inputProps={{\r\n                    style: {\r\n                      textAlign: \"center\",\r\n                    },\r\n                  }}\r\n                />\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n          <AnimatePresence>\r\n            {showPasswordField && (\r\n              <motion.div\r\n                variants={passwordVariant}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n                exit=\"initial\"\r\n              >\r\n                <TextField\r\n                  style={{ marginBottom: 11 }}\r\n                  FormHelperTextProps={{ style: { textAlign: \"center\" } }}\r\n                  error={!!passwordError}\r\n                  helperText={passwordError}\r\n                  onChange={(e) => {\r\n                    setPassword(e.target.value);\r\n                    if (passwordError && e.target.value.trim())\r\n                      setPasswordError(\"\");\r\n                  }}\r\n                  required\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Enter Room Password\"\r\n                  value={password}\r\n                  inputProps={{\r\n                    style: {\r\n                      textAlign: \"center\",\r\n                    },\r\n                  }}\r\n                />\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n          <div style={{ height: 51 }}>\r\n            <AnimatePresence>\r\n              {((joiningID.trim() && !showPasswordField) ||\r\n                (password.trim() && showPasswordField)) && (\r\n                <motion.div\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"initial\"\r\n                  whileHover=\"hover\"\r\n                  variants={buttonVariants}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    onClick={handleJoinClick}\r\n                  >\r\n                    Join\r\n                  </Button>\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n        </FormControl>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Join;\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Game.tsx",["76","77","78","79","80"],"E:\\ReactProjects\\tic-tac-toe\\src\\context\\StateProvider.js",[],["81","82"],"E:\\ReactProjects\\tic-tac-toe\\src\\context\\reducer.ts",[],"E:\\ReactProjects\\tic-tac-toe\\src\\pages\\Create.tsx",["83"],"import {\r\n  Button,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n  withStyles,\r\n} from \"@material-ui/core\";\r\nimport { green, lightGreen, red } from \"@material-ui/core/colors\";\r\nimport { AnimatePresence, motion } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  buttonVariants,\r\n  containerVariants,\r\n  passwordVariant,\r\n} from \"../common/commonVariants\";\r\nimport { db } from \"../common/firebase\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport \"./Create.css\";\r\n\r\nconst titleVariant = {\r\n  initial: {\r\n    x: \"100vw\",\r\n  },\r\n  animate: {\r\n    x: 0,\r\n    transition: {\r\n      delay: 0.2,\r\n      type: \"spring\",\r\n    },\r\n  },\r\n};\r\nconst formVariant = {\r\n  initial: {\r\n    x: \"-100vw\",\r\n  },\r\n  animate: {\r\n    x: 0,\r\n    transition: {\r\n      delay: 0.4,\r\n      type: \"spring\",\r\n    },\r\n  },\r\n};\r\n\r\nconst CustomSwitch = withStyles({\r\n  switchBase: {\r\n    color: red[\"A700\"],\r\n    \"&$checked\": {\r\n      color: green[\"A700\"],\r\n    },\r\n    \"&$checked + $track\": {\r\n      backgroundColor: lightGreen[\"A400\"],\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\nconst Create = () => {\r\n  const history = useHistory();\r\n  const [{ nickname, userID }] = useStateValue();\r\n  const [roomName, setRoomName] = useState(\"\");\r\n  const [enablePassword, setEnablePassword] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    nickname ? setRoomName(`${nickname}'s Room`) : history.replace(\"/\");\r\n  }, []);\r\n\r\n  const handleCreateButtonClick = (e: React.MouseEvent) => {\r\n    e.preventDefault();\r\n\r\n    const chanceOfArray = [\"creator\", \"guest\"];\r\n    const chanceOf = chanceOfArray[Math.floor(Math.random() * 2)];\r\n\r\n    db.collection(\"rooms\")\r\n      .where(\"creatorID\", \"==\", userID)\r\n      .get()\r\n      .then((response) => {\r\n        if (!response.docs.length) {\r\n          db.collection(`rooms`)\r\n            .where(\"guestID\", \"==\", userID)\r\n            .get()\r\n            .then((response) => {\r\n              if (!response.docs.length) {\r\n                db.collection(`rooms`)\r\n                  .add({\r\n                    roomName: roomName,\r\n                    passwordEnabled: enablePassword,\r\n                    password: password,\r\n                    creatorID: userID,\r\n                    creatorNickname: nickname,\r\n                    guestID: \"\",\r\n                    guestNickname: \"\",\r\n                    creatorPoints: 0,\r\n                    guestPoints: 0,\r\n                    ties: 0,\r\n                    matrix: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n                    chanceOf: chanceOf,\r\n                  })\r\n                  .then((response) => history.replace(`/game/${response.id}`));\r\n              } else {\r\n                const createNewRoom = window.confirm(\r\n                  `You are already playing as a guest in another Room, \\nDo you wish to exit \"${\r\n                    response.docs[0].data().roomName\r\n                  }\" and create a new Room?`\r\n                );\r\n\r\n                if (createNewRoom) {\r\n                  db.collection(`room`)\r\n                    .doc(response.docs[0].id)\r\n                    .update({\r\n                      guestID: \"\",\r\n                      guestNickname: \"\",\r\n                      guestPoints: 0,\r\n                      creatorPoints: 0,\r\n                      ties: 0,\r\n                      matrix: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n                    })\r\n                    .then(() => handleCreateButtonClick(e));\r\n                }\r\n              }\r\n            });\r\n        } else {\r\n          const enterPreviousRoom = window.confirm(\r\n            `You have already hosted a Room. \\nDo you want to enter your previous Room \"${\r\n              response.docs[0].data().roomName\r\n            }\"?`\r\n          );\r\n\r\n          if (enterPreviousRoom) {\r\n            history.replace(`/game/${response.docs[0].id}`);\r\n          } else {\r\n            const createNewRoom = window.confirm(\r\n              `Do you want to create a new Room with this new Data?`\r\n            );\r\n\r\n            if (createNewRoom) {\r\n              db.collection(`rooms`)\r\n                .doc(response.docs[0].id)\r\n                .update({\r\n                  roomName: roomName,\r\n                  passwordEnabled: enablePassword,\r\n                  password: password,\r\n                  creatorID: userID,\r\n                  creatorNickname: nickname,\r\n                  guestID: \"\",\r\n                  guestNickname: \"\",\r\n                  creatorPoints: 0,\r\n                  guestPoints: 0,\r\n                  ties: 0,\r\n                  matrix: [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"],\r\n                  chanceOf: chanceOf,\r\n                })\r\n                .then(() => history.replace(`/game/${response.docs[0].id}`));\r\n            }\r\n          }\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"create\"\r\n      variants={containerVariants}\r\n      initial=\"hidden\"\r\n      animate=\"visible\"\r\n      exit=\"exit\"\r\n    >\r\n      <motion.div\r\n        variants={titleVariant}\r\n        initial=\"initial\"\r\n        animate=\"animate\"\r\n        whileHover=\"hover\"\r\n        style={{ marginBottom: 21 }}\r\n      >\r\n        <Typography component=\"h3\" variant=\"h3\">\r\n          Create new Room\r\n        </Typography>\r\n      </motion.div>\r\n      <motion.div variants={formVariant} initial=\"initial\" animate=\"animate\">\r\n        <FormControl>\r\n          <TextField\r\n            style={{ marginBottom: 11 }}\r\n            onChange={(e) => setRoomName(e.target.value)}\r\n            required\r\n            type=\"text\"\r\n            variant=\"outlined\"\r\n            placeholder=\"Enter Room name\"\r\n            value={roomName}\r\n            inputProps={{\r\n              style: {\r\n                textAlign: \"center\",\r\n              },\r\n            }}\r\n          />\r\n          <FormControlLabel\r\n            value=\"start\"\r\n            control={\r\n              <CustomSwitch\r\n                color=\"primary\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  setEnablePassword(e.target.checked)\r\n                }\r\n              />\r\n            }\r\n            label=\"Enable Password\"\r\n            labelPlacement=\"top\"\r\n          />\r\n          <AnimatePresence>\r\n            {enablePassword && (\r\n              <motion.div\r\n                variants={passwordVariant}\r\n                initial=\"initial\"\r\n                animate=\"animate\"\r\n                exit=\"initial\"\r\n              >\r\n                <TextField\r\n                  style={{ marginBottom: 11 }}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                  required\r\n                  type=\"text\"\r\n                  variant=\"outlined\"\r\n                  placeholder=\"Enter Room Password\"\r\n                  value={password}\r\n                  inputProps={{\r\n                    style: {\r\n                      textAlign: \"center\",\r\n                    },\r\n                  }}\r\n                />\r\n              </motion.div>\r\n            )}\r\n          </AnimatePresence>\r\n          <div style={{ height: 51 }}>\r\n            <AnimatePresence>\r\n              {((roomName.trim() && !enablePassword) ||\r\n                (enablePassword && password.trim())) && (\r\n                <motion.div\r\n                  initial=\"initial\"\r\n                  animate=\"animate\"\r\n                  exit=\"initial\"\r\n                  whileHover=\"hover\"\r\n                  variants={buttonVariants}\r\n                  style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                  }}\r\n                >\r\n                  <Button\r\n                    color=\"secondary\"\r\n                    variant=\"contained\"\r\n                    onClick={handleCreateButtonClick}\r\n                  >\r\n                    Create\r\n                  </Button>\r\n                </motion.div>\r\n              )}\r\n            </AnimatePresence>\r\n          </div>\r\n        </FormControl>\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\common\\commonVariants.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\common\\firebase.ts",["84"],"import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAOUvTYYwB7o_2AADRvdkOJ3HdkbsSinAc\",\r\n  authDomain: \"ticctactoee.firebaseapp.com\",\r\n  projectId: \"ticctactoee\",\r\n  storageBucket: \"ticctactoee.appspot.com\",\r\n  messagingSenderId: \"1088964664906\",\r\n  appId: \"1:1088964664906:web:08f5427b484574467ed0b3\",\r\n  measurementId: \"G-0KNK4BGJ4Y\",\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\n\r\nexport { db };\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\components\\PlayerInfo.tsx",["85"],"import { motion } from \"framer-motion\";\r\nimport { useEffect } from \"react\";\r\nimport { actionTypes } from \"../context/reducer\";\r\nimport { useStateValue } from \"../context/StateProvider\";\r\nimport \"./PlayerInfo.css\";\r\n\r\ninterface PlayerInfoInterface {\r\n  id: string | undefined;\r\n  name: string | undefined;\r\n  score: number | undefined;\r\n  side: string;\r\n}\r\n\r\nconst PlayerInfo = ({ id, name, score, side }: PlayerInfoInterface) => {\r\n  const [{ userID }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    const userIDFromLocalStorage = localStorage.getItem(\"userID\");\r\n    if (userIDFromLocalStorage) {\r\n      dispatch({\r\n        type: actionTypes.SET_USER_ID,\r\n        userID: userIDFromLocalStorage,\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"userInfo\"\r\n      whileHover={{\r\n        y: -24,\r\n        transition: {\r\n          duration: 0.4,\r\n          yoyo: Infinity,\r\n        },\r\n      }}\r\n    >\r\n      <motion.h2\r\n        initial={{\r\n          x: side === \"left\" ? \"-100vw\" : \"100vw\",\r\n        }}\r\n        animate={{\r\n          x: 0,\r\n        }}\r\n        transition={{\r\n          type: \"spring\",\r\n          bounce: 0.44,\r\n          stiffness: 111,\r\n          delay: 1.5,\r\n          damping: 9.5,\r\n        }}\r\n        className=\"userInfo__name\"\r\n      >\r\n        {userID === id ? \"You\" : name}\r\n      </motion.h2>\r\n      <motion.h1\r\n        initial={{\r\n          x: side === \"left\" ? \"-100vw\" : \"100vw\",\r\n        }}\r\n        animate={{\r\n          x: 0,\r\n        }}\r\n        transition={{\r\n          type: \"spring\",\r\n          bounce: 0.44,\r\n          stiffness: 111,\r\n          delay: 1.8,\r\n          damping: 9.5,\r\n        }}\r\n        className=\"userInfo__score\"\r\n      >\r\n        {score}\r\n      </motion.h1>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default PlayerInfo;\r\n","E:\\ReactProjects\\tic-tac-toe\\src\\components\\Modal.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\common\\GameVariants.tsx",[],"E:\\ReactProjects\\tic-tac-toe\\src\\components\\Loader.tsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":3,"column":17,"nodeType":"92","messageId":"93","endLine":3,"endColumn":23},{"ruleId":"90","severity":1,"message":"94","line":10,"column":9,"nodeType":"92","messageId":"93","endLine":10,"endColumn":17},{"ruleId":"95","severity":1,"message":"96","line":46,"column":6,"nodeType":"97","endLine":46,"endColumn":8,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":50,"column":6,"nodeType":"97","endLine":50,"endColumn":8,"suggestions":"100"},{"ruleId":"90","severity":1,"message":"101","line":41,"column":12,"nodeType":"92","messageId":"93","endLine":41,"endColumn":20},{"ruleId":"95","severity":1,"message":"102","line":95,"column":6,"nodeType":"97","endLine":95,"endColumn":8,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"104","line":112,"column":6,"nodeType":"97","endLine":112,"endColumn":16,"suggestions":"105"},{"ruleId":"95","severity":1,"message":"106","line":208,"column":6,"nodeType":"97","endLine":208,"endColumn":21,"suggestions":"107"},{"ruleId":"95","severity":1,"message":"108","line":219,"column":6,"nodeType":"97","endLine":219,"endColumn":21,"suggestions":"109"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"95","severity":1,"message":"99","line":71,"column":6,"nodeType":"97","endLine":71,"endColumn":8,"suggestions":"110"},{"ruleId":"90","severity":1,"message":"111","line":13,"column":7,"nodeType":"92","messageId":"93","endLine":13,"endColumn":18},{"ruleId":"95","severity":1,"message":"96","line":25,"column":6,"nodeType":"97","endLine":25,"endColumn":8,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'location' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["115"],"React Hook useEffect has missing dependencies: 'history' and 'nickname'. Either include them or remove the dependency array.",["116"],"'nickname' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'requestedRoomID'. Either include it or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'creatorPoints', 'gameData?.creatorID', 'gameData?.id', 'gameData?.matrices', 'guestPoints', 'shouldUpdatePoints', 'ties', and 'userID'. Either include them or remove the dependency array.",["119"],"React Hook useEffect has missing dependencies: 'gameData?.id', 'gameData?.matrices', and 'updateDatabaseGridBox'. Either include them or remove the dependency array.",["120"],["121"],"'firebaseApp' is assigned a value but never used.",["122"],"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"125","fix":"135"},{"desc":"123","fix":"136"},"Update the dependencies array to be: [dispatch]",{"range":"137","text":"138"},"Update the dependencies array to be: [history, nickname]",{"range":"139","text":"140"},"Update the dependencies array to be: [requestedRoomID]",{"range":"141","text":"142"},"Update the dependencies array to be: [gameData, history]",{"range":"143","text":"144"},"Update the dependencies array to be: [creatorPoints, gameData?.creatorID, gameData?.id, gameData?.matrices, guestPoints, offlineMatrix, shouldUpdatePoints, ties, userID]",{"range":"145","text":"146"},"Update the dependencies array to be: [gameData?.id, gameData?.matrices, offlineMatrix, updateDatabaseGridBox]",{"range":"147","text":"148"},{"range":"149","text":"140"},{"range":"150","text":"138"},[1420,1422],"[dispatch]",[1243,1245],"[history, nickname]",[3236,3238],"[requestedRoomID]",[3640,3650],"[gameData, history]",[7117,7132],"[creatorPoints, gameData?.creatorID, gameData?.id, gameData?.matrices, guestPoints, offlineMatrix, shouldUpdatePoints, ties, userID]",[7383,7398],"[gameData?.id, gameData?.matrices, offlineMatrix, updateDatabaseGridBox]",[1566,1568],[731,733]]